services:
  db:
    image: postgres
    restart: always
    container_name: dbPostgres
    secrets:
      - db-password
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "api", "-U", "postgres"]
      interval: 3s
      retries: 5
      start_period: 30s
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - backnet
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=api
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    ports:
      - 5432:5432
    expose:
      - 5432
  
  adminer:
    image: adminer
    restart: always 
    container_name: adminer
    ports:
      - 8080:8080
    networks:
      - backnet
  
#  frontend:
#    build:
#      context: SOGAP-React
#      target: frontend
#    container_name: frontend
#    restart: always
#    command: "npm start"
#    user: "node"
#    environment:
#      - NODE_ENV=production
#    volumes:
#      - ./SOGAP-React:/app
#    ports:
#      - 3000:3000
#    networks:
#      - backnet


  frontend:
      image: node:20
      restart: always
      command: "npm start"
      container_name: frontend
      user: "node"
      working_dir: /home/node/app
      environment:
        - NODE_ENV=production
      volumes:
        - ./SOGAP-React:/home/node/app
      ports:
        - 3000:3000
      networks:
        - backnet


  myapp:
    build:
      context: SOGAP-Process-Service
      target: builder
    restart: always
    container_name: processBack
    volumes:
      - ./SOGAP-Process-Service:/code
    ports:
      - 8000:8000
    networks:
      - backnet  
    expose:
      - 8000
    depends_on:
      db:
        condition: service_healthy


volumes:
  db-data:

secrets:
  db-password:
    file: ./db/password.txt

networks:
  backnet:
